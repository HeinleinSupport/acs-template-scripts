#!/bin/bash 
#
# Init file for SSH Public Keys Download Client
#
### BEGIN INIT INFO
# Provides:             cloud-set-guest-sshkey
# Required-Start:       $local_fs $syslog $network
# Required-Stop:        $local_fs $syslog $network
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    SSH Public Keys Download Client
### END INIT INFO

set -e

. /lib/lsb/init-functions

# Modify this line to specify the user (default is root)
user=vmadmin

uidname=$(id -nu $user)
gidname=$(id -ng $user)

# Add your DHCP lease folders here
DHCP_FOLDERS="/var/lib/dhcp/*"

function cloud_set_guest_sshkey() {

    keys_received=0
    file_count=0

    for DHCP_FILE in $DHCP_FOLDERS; do
        if [ -f $DHCP_FILE ]; then
            file_count=$((file_count+1))
            SSHKEY_SERVER_IP=$(grep dhcp-server-identifier $DHCP_FILE | tail -1 | awk '{print $NF}' | tr -d '\;')

            if [ -n $SSHKEY_SERVER_IP ]; then
                logger -t "cloud" "Sending request to ssh key server at $SSHKEY_SERVER_IP"

                publickey=$(wget -t 3 -T 20 -O - http://$SSHKEY_SERVER_IP/latest/public-keys 2>/dev/null)

                if [ $? -eq 0 ]; then
                    logger -t "cloud" "Got response from server at $SSHKEY_SERVER_IP"
                    keys_received=1
                    break
                fi
            else
                logger -t "cloud" "Could not find ssh key server IP in $DHCP_FILE"
            fi
        fi
    done

    # did we find the keys anywhere?
    if [ "$keys_received" == "0" ]; then
        logger -t "cloud" "Failed to get ssh keys from any server"
        exit 1
    fi

    # set ssh public key
    homedir=$(grep ^$user /etc/passwd|awk -F ":" '{print $6}')
    sshdir=$homedir/.ssh
    authorized=$sshdir/authorized_keys


    if [ ! -e $sshdir ]; then
        mkdir $sshdir
	chown ${uidname}:${gidname} $sshdir
	chmod 0700 $sshdir
    fi

    if [ ! -e $authorized ]; then
        touch $authorized
	chown ${uidname}:${gidname} $authorized
	chmod 0600 $authorized
    fi

    #cat $authorized|grep -v "$publickey" > $authorized
    #echo "$publickey" >> $authorized
    #To support user copied ssh keys
    if [ `grep -c "$publickey" $authorized` == 0 ]; then
            echo "$publickey" >> $authorized
    fi
}

case "$1" in
  start)
      log_action_msg "Starting cloud" "cloud-set-guest-sshkey"
      sleep 10
      cloud_set_guest_sshkey
      ;;
  stop)
      log_action_msg "Stopping cloud" "cloud-set-guest-sshkey"
      log_end_msg 0
      ;;
  *)
      log_action_msg "Usage: /etc/init.d/cloud-set-guest-sshkey {start}"
      exit 1
      ;;
esac

exit 0

