#!/bin/bash
#
# cloud-set-guest-password   Init file for Password Download Client / SuSE Wicked dhcpd
#
# ## systemd service file
# ## /etc/systemd/system/cloud-set-guest-password.service
# #[Unit]
# #Description=Cloud Set Guest Password Service
# #After=network.target
# #
# #[Service]
# #Type=oneshot
# #User=root
# #ExecStart=/usr/local/sbin/cloud-set-guest-password
# #Restart=no
# #
# #[Install]
# #WantedBy=multi-user.target
# #
#
# chkconfig: 2345 98 02
# description: Init file for Password Download Client

### BEGIN INIT INFO
# Provides: cloud-set-guest-password
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Init file for Password Download Client
# Description:       Init file for Password Download Client
### END INIT INFO

# Modify this line to specify the user (default is root)
user=vmadmin

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num><num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
. /etc/rc.status

# First reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
#


# Add your DHCP lease folders here
DHCP_FOLDERS="/var/lib/wicked/*"

function cloud_set_guest_password() {
    password_received=0
    file_count=0
    error_count=0

    for DHCP_FILE in $DHCP_FOLDERS; do
        if [ -f $DHCP_FILE ]; then
            file_count=$((file_count+1))
            PASSWORD_SERVER_IP=$(grep '<server-address>' $DHCP_FILE | tail -1 | sed -s 's,<[^>]*>,,g;s, ,,g')

            if [ -n $PASSWORD_SERVER_IP ]; then
                logger -t "cloud" "Found password server IP $PASSWORD_SERVER_IP in $DHCP_FILE"
                logger -t "cloud" "Sending request to password server at $PASSWORD_SERVER_IP"
                password=$(wget -q -t 3 -T 20 -O - --header "DomU_Request: send_my_password" $PASSWORD_SERVER_IP:8080)
                password=$(echo $password | tr -d '\r')

                if [ $? -eq 0 ]; then
                    logger -t "cloud" "Got response from server at $PASSWORD_SERVER_IP"

                    case $password in
                    
                    "")			logger -t "cloud" "Password server at $PASSWORD_SERVER_IP did not have any password for the VM"
                                        continue
                                        ;;
                    
                    "bad_request")	logger -t "cloud" "VM sent an invalid request to password server at $PASSWORD_SERVER_IP"
                                        error_count=$((error_count+1))
                                        continue
                                        ;;
                                        
                    "saved_password") 	logger -t "cloud" "VM has already saved a password from the password server at $PASSWORD_SERVER_IP"
                                        continue
                                        ;;
                                        
                    *)					logger -t "cloud" "VM got a valid password from server at $PASSWORD_SERVER_IP"
                                        password_received=1
                                        break
                                        ;;
                                        
                    esac
                else
                    logger -t "cloud" "Failed to send request to password server at $PASSWORD_SERVER_IP"
                    error_count=$((error_count+1))
                fi
            else
                logger -t "cloud" "Could not find password server IP in $DHCP_FILE"
                error_count=$((error_count+1))
            fi
        fi
    done

    if [ "$password_received" == "0" ]; then
        if [ "$error_count" == "$file_count" ]; then
            logger -t "cloud" "Failed to get password from any server"
            exit 1
        else
            logger -t "cloud" "Did not need to change password."
            exit 0
        fi
    fi

    logger -t "cloud" "Changing password ..."
    echo "$user:$password" | chpasswd
                            
    if [ $? -gt 0 ]; then
        logger -t "cloud" "Failed to change password for user $user"
    fi

    logger -t "cloud" "Successfully changed password for user $user"
    logger -t "cloud" "Sending acknowledgment to password server at $PASSWORD_SERVER_IP"
    wget -t 3 -T 20 -O - --header "DomU_Request: saved_password" $PASSWORD_SERVER_IP:8080
}

# See how we were called.
case "$1" in
  start)
    echo -n "Starting cloud-set-guest-password: "
    cloud_set_guest_password
    rc_status -v
    ;;
  stop)
    echo -n "Shutting down cloud-set-guest-password: "
    rc_status -v
    ;;
  restart)
    $0 stop
    $0 start
    rc_status -v
    ;;
  *) 
    echo "Usage: cloud-set-guest-password {start}"
    exit 1
    ;;
esac

rc_exit

